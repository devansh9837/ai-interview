[{"D:\\ai-interview-master\\ai-interview-master\\src\\index.js":"1","D:\\ai-interview-master\\ai-interview-master\\src\\reportWebVitals.js":"2","D:\\ai-interview-master\\ai-interview-master\\src\\App.js":"3","D:\\ai-interview-master\\ai-interview-master\\src\\component\\videorecorder.js":"4"},{"size":919,"mtime":1607009303000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1607009303000,"results":"7","hashOfConfig":"6"},{"size":1476,"mtime":1607009303000,"results":"8","hashOfConfig":"6"},{"size":2349,"mtime":1607025785687,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},"fohc0k",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"13"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"D:\\ai-interview-master\\ai-interview-master\\src\\index.js",["22"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Grommet} from 'grommet';\nimport {\n  BrowserRouter ,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Recorder from './component/videorecorder';\nReactDOM.render(\n  <React.StrictMode>\n    <Grommet full>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact >\n            <App />\n          </Route>\n          <Route path=\"/rec\" >\n            <Recorder />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n      \n    </Grommet>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["23","24"],"D:\\ai-interview-master\\ai-interview-master\\src\\reportWebVitals.js",[],"D:\\ai-interview-master\\ai-interview-master\\src\\App.js",["25","26","27","28"],"import React,{useState} from 'react';\nimport './App.css';\nimport {Box,Text,Heading,Button} from 'grommet';\nimport {Video} from 'grommet-icons';\nimport {useHistory} from 'react-router-dom';\nimport Recorder from './component/videorecorder';\nconst questions=[{qs:\"What is your name?\"},{qs:\"What is your qualifiacations?\"},{qs:\"What is your skills?\"},{qs:\"What is your strength?\"}];\nfunction App() {\n  const [index,setindex]=useState(0);\n  const [rec,setrec]=useState(false);\n  const history = useHistory();\n  return (\n    <>\n      <Box fill>\n        <Box direction=\"row\" width=\"xxlarge\" className=\"head\" height=\"15%\" justify=\"center\" align=\"center\" >\n          <Heading level=\"2\" color=\"#4A164B\" >AI-INTERVIEW</Heading>\n        </Box>\n        <Box width=\"xxlarge\" justify=\"center\" align=\"center\" height=\"85%\">\n          <Box width=\"60%\"  direction=\"column\" className=\"ques\" height={{max:\"auto\",min:\"350px\"}} background=\"white\" >\n            <Box justify=\"center\" align=\"center\" height=\"80%\" >\n              {<Heading color=\"#4A164B\" level=\"2\"  >Q{index+1} : {questions[index].qs}</Heading>}\n            </Box>\n            <Box gap=\"small\" height=\"20%\" justify=\"end\" direction=\"row\" pad=\"small\" >\n              <Button onClick={()=> {history.push('/rec')}} label={<Text weight=\"bold\" color=\"#4A164B\">Record Answer</Text>} icon={<Video />}  primary color=\"orange\" />\n            </Box>\n          </Box>\n        </Box>\n        \n      </Box>\n    </>\n    \n  );\n}\n\nexport default App;\n","D:\\ai-interview-master\\ai-interview-master\\src\\component\\videorecorder.js",["29"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './video.css';\n\n\nconst videoType = 'video/webm';\n\nexport default class HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recording: false,\n      videos: [],\n    };\n  }\n\n  async componentDidMount() {\n    const stream = await navigator.mediaDevices.getUserMedia({video: true, audio: true});\n    this.video.srcObject = stream;\n    this.video.play();\n    this.mediaRecorder = new MediaRecorder(stream, {\n      mimeType: videoType,\n    });\n    this.chunks = [];\n    this.mediaRecorder.ondataavailable = e => {\n      if (e.data && e.data.size > 0) {\n        this.chunks.push(e.data);\n      }\n    };\n  }\n\n  startRecording(e) {\n    e.preventDefault();\n    this.chunks = [];\n    this.mediaRecorder.start(10);\n    this.setState({recording: true});\n  }\n\n  stopRecording(e) {\n    e.preventDefault();\n    this.mediaRecorder.stop();\n    this.setState({recording: false});\n    this.saveVideo();\n  }\n\n  saveVideo() {\n    const blob = new Blob(this.chunks, {type: videoType});\n    const videoURL = window.URL.createObjectURL(blob);\n    const videos = this.state.videos.concat([videoURL]);\n    this.setState({videos});\n  }\n\n  deleteVideo(videoURL) {\n    const videos = this.state.videos.filter(v => v !== videoURL);\n    this.setState({videos});\n  }\n\n  render() {\n    const {recording, videos} = this.state;\n\n    return (\n      <div className=\"maiin\">\n        <video\n          class=\"vid\"\n          ref={v => {\n            this.video = v;\n          }}>\n          Video stream not available.\n        </video>\n        <div>\n          {!recording && <button class=\"buton1\"  onClick={e => this.startRecording(e)}><b>Record</b></button>}\n          {recording && <button class=\"buton2\" onClick={e => this.stopRecording(e)}>Stop</button>}\n        </div>\n        <div>\n          <p class=\"recc\">Recorded videos:</p>\n          {videos.map((videoURL, i) => (\n            <div key={`video_${i}`}>\n              <video class=\"vid1\" style={{width: 400}} src={videoURL} autoPlay loop />\n              <div>\n                <button class=\"buton4\" onClick={() => this.deleteVideo(videoURL)}>Delete</button>\n                <a class=\"buton3\" href={videoURL}>Download</a>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n",{"ruleId":"30","severity":1,"message":"31","line":11,"column":3,"nodeType":"32","messageId":"33","endLine":11,"endColumn":7},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"30","severity":1,"message":"38","line":6,"column":8,"nodeType":"32","messageId":"33","endLine":6,"endColumn":16},{"ruleId":"30","severity":1,"message":"39","line":9,"column":16,"nodeType":"32","messageId":"33","endLine":9,"endColumn":24},{"ruleId":"30","severity":1,"message":"40","line":10,"column":10,"nodeType":"32","messageId":"33","endLine":10,"endColumn":13},{"ruleId":"30","severity":1,"message":"41","line":10,"column":14,"nodeType":"32","messageId":"33","endLine":10,"endColumn":20},{"ruleId":"30","severity":1,"message":"42","line":2,"column":8,"nodeType":"32","messageId":"33","endLine":2,"endColumn":16},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["43"],"no-negated-in-lhs",["44"],"'Recorder' is defined but never used.","'setindex' is assigned a value but never used.","'rec' is assigned a value but never used.","'setrec' is assigned a value but never used.","'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation"]